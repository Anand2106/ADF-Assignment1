{
	"name": "Unpivot_Transfomation8",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Unpivot_Source",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Unpivot_Destination",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "unpivot1"
				},
				{
					"name": "cast1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          item as string,",
				"          {2018} as string,",
				"          {2019} as string,",
				"          {S.No} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 unpivot(output(",
				"          Years as short,",
				"          Quantity as string",
				"     ),",
				"     ungroupBy({S.No},",
				"          item),",
				"     lateral: true,",
				"     ignoreNullPivots: false) ~> unpivot1",
				"unpivot1 cast(output(",
				"          {S.No} as short",
				"     ),",
				"     errors: true) ~> cast1",
				"cast1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          cusId as string,",
				"          cusName as string,",
				"          gender as string,",
				"          netpurchaseAmount as string",
				"     ),",
				"     partitionFileNames:['Unpivot_Output.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}