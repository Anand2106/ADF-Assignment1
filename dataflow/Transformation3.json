{
	"name": "Transformation3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Transformation3_Source",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Transformation3_Destination",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empId as short,",
				"          empName as string,",
				"          age as short,",
				"          salary as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          EmpId = empId,",
				"          EmpName = empName,",
				"          Age = age",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source1 select(mapColumn(",
				"          EmpId = empId,",
				"          Salary = salary",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive(PF = Salary*0.08,",
				"          Tax = Salary*0.05) ~> derivedColumn1",
				"derivedColumn1 derive(NetSalary = Salary-(PF+Tax)) ~> derivedColumn2",
				"derivedColumn2, select1 join(select2@EmpId == select1@EmpId,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['EmpPayslip.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          EmpId = select2@EmpId,",
				"          EmpName,",
				"          Age,",
				"          Salary,",
				"          PF,",
				"          Tax,",
				"          NetSalary,",
				"          EmpId = select1@EmpId",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}